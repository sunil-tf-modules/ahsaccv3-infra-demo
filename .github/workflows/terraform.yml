# File: .github/workflows/az-login.yml
name: Terraform IAC

on:
  workflow_dispatch:
    inputs:
      tf_action:
        description: "Terraform Apply or Destroy (def: validate)"
        default: "validate"
        type: "string"

env:
  ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID_SUNILNGVLI }}
  ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET_SUNILNGVLI }}
  ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID_SUNILNGVLI }}
  ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID_SUNILNGVLI }}

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    steps:
    - name: Prompt for input
      run: |
        read -p "Do you want to continue with this workflow? " yn
        echo "::set-output name=user_response::$yn"
      id: prompt

    - name: Wait for user input
      if: ${{ steps.prompt.outputs.user_response == 'Yes' }}
      run: echo "User chose to continue with the workflow"
    
    - name: Abort the workflow
      if: ${{ steps.prompt.outputs.user_response == 'No' }}
      run: exit 1

    - name: Code checkout with v2
      uses: actions/checkout@v2

    - name: Check files
      working-directory: ./core/
      run: ls -l

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 1.4.0
    
    - name: Terraform version check
      run: |
        terraform -version
    
    - name: Terraform Init and checks
      id: init
      working-directory: ./core/
      run: |
        echo "Terraform Init"
        terraform init
        sleep 1
        echo "Terraform fmt"
        terraform fmt --recursive
        sleep 1
        echo "Terraform validate"
        terraform validate
        sleep 1
    
    - name: Terraform ${{ inputs.tf_action }}
      id: plan
      shell: bash
      working-directory: ./core/
      run: |
        # Terraform Actions
        # Apply
        if [ ${{ inputs.tf_action }} == "apply" ]; then
          echo "user entered 'apply'"
          terraform plan -var-file=dev.tfvars -out=dev-${{ inputs.tf_action }}.tfplan
        # Destroy
        elif [ ${{ inputs.tf_action }} == "destroy" ]; then
          echo "user entered 'destroy'"  
          terraform plan -var-file=dev.tfvars -out=dev-${{ inputs.tf_action }}.tfplan -destroy
        else
          echo "no value entered"
        fi

    - name: Terraform Action Apply/Destory
      id: terraform-action
      working-directory: ./core/
      run: |
        terraform apply dev-${{ inputs.tf_action }}.tfplan
      
